/*
    SPDX-FileCopyrightText: 2020-2024 Jakub Stankowski <jakub.stankowski@put.poznan.pl>
    SPDX-License-Identifier: BSD-3-Clause
*/
#include "xJPEG_HuffmanDefault.h"

namespace PMBB_NAMESPACE::JPEG {

//=============================================================================================================================================================================
// Default huffman tables as codes used in encoder
//=============================================================================================================================================================================
const uint8  xHuffDefaultConstants::c_HuffLenDefaultLumaDC   [12 ] = { 2, 3, 3, 3, 3, 3, 4, 5, 6, 7, 8, 9, };
const uint16 xHuffDefaultConstants::c_HuffCodeDefaultLumaDC  [12 ] = { 0x0, 0x2, 0x3, 0x4, 0x5, 0x6, 0xe, 0x1e, 0x3e, 0x7e, 0xfe, 0x1fe, };
const uint8  xHuffDefaultConstants::c_HuffLenDefaultLumaAC   [160] =
{
   2,  2,  3,  4,  5,  7,  8, 10, 16, 16, 
   4,  5,  7,  9, 11, 16, 16, 16, 16, 16, 
   5,  8, 10, 12, 16, 16, 16, 16, 16, 16, 
   6,  9, 12, 16, 16, 16, 16, 16, 16, 16, 
   6, 10, 16, 16, 16, 16, 16, 16, 16, 16, 
   7, 11, 16, 16, 16, 16, 16, 16, 16, 16, 
   7, 12, 16, 16, 16, 16, 16, 16, 16, 16, 
   8, 12, 16, 16, 16, 16, 16, 16, 16, 16, 
   9, 15, 16, 16, 16, 16, 16, 16, 16, 16, 
   9, 16, 16, 16, 16, 16, 16, 16, 16, 16, 
   9, 16, 16, 16, 16, 16, 16, 16, 16, 16, 
  10, 16, 16, 16, 16, 16, 16, 16, 16, 16, 
  10, 16, 16, 16, 16, 16, 16, 16, 16, 16, 
  11, 16, 16, 16, 16, 16, 16, 16, 16, 16, 
  16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 
  16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 
};
const uint16 xHuffDefaultConstants::c_HuffCodeDefaultLumaAC  [160] =
{//Bit=1,      2,      3,      4,      5,      6,      7,      8,      9,     10,     
  0x0000, 0x0001, 0x0004, 0x000b, 0x001a, 0x0078, 0x00f8, 0x03f6, 0xff82, 0xff83, //RL = 0
  0x000c, 0x001b, 0x0079, 0x01f6, 0x07f6, 0xff84, 0xff85, 0xff86, 0xff87, 0xff88, //RL = 1
  0x001c, 0x00f9, 0x03f7, 0x0ff4, 0xff89, 0xff8a, 0xff8b, 0xff8c, 0xff8d, 0xff8e, //RL = 2
  0x003a, 0x01f7, 0x0ff5, 0xff8f, 0xff90, 0xff91, 0xff92, 0xff93, 0xff94, 0xff95, //RL = 3
  0x003b, 0x03f8, 0xff96, 0xff97, 0xff98, 0xff99, 0xff9a, 0xff9b, 0xff9c, 0xff9d, //RL = 4
  0x007a, 0x07f7, 0xff9e, 0xff9f, 0xffa0, 0xffa1, 0xffa2, 0xffa3, 0xffa4, 0xffa5, //RL = 5
  0x007b, 0x0ff6, 0xffa6, 0xffa7, 0xffa8, 0xffa9, 0xffaa, 0xffab, 0xffac, 0xffad, //RL = 6
  0x00fa, 0x0ff7, 0xffae, 0xffaf, 0xffb0, 0xffb1, 0xffb2, 0xffb3, 0xffb4, 0xffb5, //RL = 7
  0x01f8, 0x7fc0, 0xffb6, 0xffb7, 0xffb8, 0xffb9, 0xffba, 0xffbb, 0xffbc, 0xffbd, //RL = 8
  0x01f9, 0xffbe, 0xffbf, 0xffc0, 0xffc1, 0xffc2, 0xffc3, 0xffc4, 0xffc5, 0xffc6, //RL = 9
  0x01fa, 0xffc7, 0xffc8, 0xffc9, 0xffca, 0xffcb, 0xffcc, 0xffcd, 0xffce, 0xffcf, //RL = 10
  0x03f9, 0xffd0, 0xffd1, 0xffd2, 0xffd3, 0xffd4, 0xffd5, 0xffd6, 0xffd7, 0xffd8, //RL = 11
  0x03fa, 0xffd9, 0xffda, 0xffdb, 0xffdc, 0xffdd, 0xffde, 0xffdf, 0xffe0, 0xffe1, //RL = 12
  0x07f8, 0xffe2, 0xffe3, 0xffe4, 0xffe5, 0xffe6, 0xffe7, 0xffe8, 0xffe9, 0xffea, //RL = 13
  0xffeb, 0xffec, 0xffed, 0xffee, 0xffef, 0xfff0, 0xfff1, 0xfff2, 0xfff3, 0xfff4, //RL = 14
  0xfff5, 0xfff6, 0xfff7, 0xfff8, 0xfff9, 0xfffa, 0xfffb, 0xfffc, 0xfffd, 0xfffe, //RL = 15
};
const uint8  xHuffDefaultConstants::c_HuffLenDefaultChromaDC [12 ] = { 2, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, };
const uint16 xHuffDefaultConstants::c_HuffCodeDefaultChromaDC[12 ] = { 0x0, 0x1, 0x2, 0x6, 0xe, 0x1e, 0x3e, 0x7e, 0xfe, 0x1fe, 0x3fe, 0x7fe, };
const uint8  xHuffDefaultConstants::c_HuffLenDefaultChromaAC [160] =
{
   2,  3,  4,  5,  5,  6,  7,  9, 10, 12,
   4,  6,  8,  9, 11, 12, 16, 16, 16, 16,
   5,  8, 10, 12, 15, 16, 16, 16, 16, 16,
   5,  8, 10, 12, 16, 16, 16, 16, 16, 16,
   6,  9, 16, 16, 16, 16, 16, 16, 16, 16,
   6, 10, 16, 16, 16, 16, 16, 16, 16, 16,
   7, 11, 16, 16, 16, 16, 16, 16, 16, 16,
   7, 11, 16, 16, 16, 16, 16, 16, 16, 16,
   8, 16, 16, 16, 16, 16, 16, 16, 16, 16,
   9, 16, 16, 16, 16, 16, 16, 16, 16, 16,
   9, 16, 16, 16, 16, 16, 16, 16, 16, 16,
   9, 16, 16, 16, 16, 16, 16, 16, 16, 16,
   9, 16, 16, 16, 16, 16, 16, 16, 16, 16,
  11, 16, 16, 16, 16, 16, 16, 16, 16, 16,
  14, 16, 16, 16, 16, 16, 16, 16, 16, 16,
  15, 16, 16, 16, 16, 16, 16, 16, 16, 16,
};
const uint16 xHuffDefaultConstants::c_HuffCodeDefaultChromaAC[160] =
{//Bit=1,      2,      3,      4,      5,      6,      7,      8,      9,     10,     
  0x0001, 0x0004, 0x000a, 0x0018, 0x0019, 0x0038, 0x0078, 0x01f4, 0x03f6, 0x0ff4, //RL = 0
  0x000b, 0x0039, 0x00f6, 0x01f5, 0x07f6, 0x0ff5, 0xff88, 0xff89, 0xff8a, 0xff8b, //RL = 1
  0x001a, 0x00f7, 0x03f7, 0x0ff6, 0x7fc2, 0xff8c, 0xff8d, 0xff8e, 0xff8f, 0xff90, //RL = 2
  0x001b, 0x00f8, 0x03f8, 0x0ff7, 0xff91, 0xff92, 0xff93, 0xff94, 0xff95, 0xff96, //RL = 3
  0x003a, 0x01f6, 0xff97, 0xff98, 0xff99, 0xff9a, 0xff9b, 0xff9c, 0xff9d, 0xff9e, //RL = 4
  0x003b, 0x03f9, 0xff9f, 0xffa0, 0xffa1, 0xffa2, 0xffa3, 0xffa4, 0xffa5, 0xffa6, //RL = 5
  0x0079, 0x07f7, 0xffa7, 0xffa8, 0xffa9, 0xffaa, 0xffab, 0xffac, 0xffad, 0xffae, //RL = 6
  0x007a, 0x07f8, 0xffaf, 0xffb0, 0xffb1, 0xffb2, 0xffb3, 0xffb4, 0xffb5, 0xffb6, //RL = 7
  0x00f9, 0xffb7, 0xffb8, 0xffb9, 0xffba, 0xffbb, 0xffbc, 0xffbd, 0xffbe, 0xffbf, //RL = 8
  0x01f7, 0xffc0, 0xffc1, 0xffc2, 0xffc3, 0xffc4, 0xffc5, 0xffc6, 0xffc7, 0xffc8, //RL = 9
  0x01f8, 0xffc9, 0xffca, 0xffcb, 0xffcc, 0xffcd, 0xffce, 0xffcf, 0xffd0, 0xffd1, //RL = 10
  0x01f9, 0xffd2, 0xffd3, 0xffd4, 0xffd5, 0xffd6, 0xffd7, 0xffd8, 0xffd9, 0xffda, //RL = 11
  0x01fa, 0xffdb, 0xffdc, 0xffdd, 0xffde, 0xffdf, 0xffe0, 0xffe1, 0xffe2, 0xffe3, //RL = 12
  0x07f9, 0xffe4, 0xffe5, 0xffe6, 0xffe7, 0xffe8, 0xffe9, 0xffea, 0xffeb, 0xffec, //RL = 13
  0x3fe0, 0xffed, 0xffee, 0xffef, 0xfff0, 0xfff1, 0xfff2, 0xfff3, 0xfff4, 0xfff5, //RL = 14
  0x7fc3, 0xfff6, 0xfff7, 0xfff8, 0xfff9, 0xfffa, 0xfffb, 0xfffc, 0xfffd, 0xfffe, //RL = 15
};

//=============================================================================================================================================================================

} //end of namespace PMBB::JPEG